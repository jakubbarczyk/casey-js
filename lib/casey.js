'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.toTrainCase=exports.toSnakeCase=exports.toKebabCase=exports.toPascalCase=exports.toCamelCase=exports.toUpperCase=exports.toLowerCase=exports.caseOf=exports.isTrainCase=exports.isSnakeCase=exports.isKebabCase=exports.isPascalCase=exports.isCamelCase=exports.isUpperCase=exports.isLowerCase=exports.isString=undefined;var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var _case2=require('./case');var _case=_interopRequireWildcard(_case2);var _pattern2=require('./pattern');var _pattern=_interopRequireWildcard(_pattern2);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var isString=exports.isString=_isString;var isLowerCase=exports.isLowerCase=_is(_pattern.LOWER_CASE);var isUpperCase=exports.isUpperCase=_is(_pattern.UPPER_CASE);var isCamelCase=exports.isCamelCase=_is(_pattern.CAMEL_CASE);var isPascalCase=exports.isPascalCase=_is(_pattern.PASCAL_CASE);var isKebabCase=exports.isKebabCase=_is(_pattern.KEBAB_CASE);var isSnakeCase=exports.isSnakeCase=_is(_pattern.SNAKE_CASE);var isTrainCase=exports.isTrainCase=_is(_pattern.TRAIN_CASE);var caseOf=exports.caseOf=_caseOf;var toLowerCase=exports.toLowerCase=_toLowerCase;var toUpperCase=exports.toUpperCase=_toUpperCase;var toCamelCase=exports.toCamelCase=_toCamelCase;var toPascalCase=exports.toPascalCase=_toPascalCase;var toKebabCase=exports.toKebabCase=_toKebabCase;var toSnakeCase=exports.toSnakeCase=_toSnakeCase;var toTrainCase=exports.toTrainCase=_toTrainCase;function _isString(any){return typeof any==='string'||any!==null&&(typeof any==='undefined'?'undefined':_typeof(any))==='object'&&any.constructor===String}function _is(pattern){return function(str){return isString(str)?pattern.test(str):false}}function _caseOf(str){if(isCamelCase(str))return _case.CAMEL_CASE;else if(isPascalCase(str))return _case.PASCAL_CASE;else if(isKebabCase(str))return _case.KEBAB_CASE;else if(isSnakeCase(str))return _case.SNAKE_CASE;else if(isTrainCase(str))return _case.TRAIN_CASE;else if(isLowerCase(str))return _case.LOWER_CASE;else if(isUpperCase(str))return _case.UPPER_CASE;else return null}function _toLowerCase(str){return String.prototype.toLowerCase.call(String(str))}function _toUpperCase(str){return String.prototype.toUpperCase.call(String(str))}function _toCamelCase(str){return _fragment(_toLowerCase(String(str))).map(function(frag,idx){return idx===0?frag:_toUpperCase(frag[0])+_tail(frag)}).join('')}function _toPascalCase(str){return _fragment(_toLowerCase(String(str))).map(function(frag){return _toUpperCase(frag[0])+_tail(frag)}).join('')}function _toKebabCase(str){return _fragment(_toLowerCase(String(str))).join('-')}function _toSnakeCase(str){return _fragment(_toLowerCase(String(str))).join('_')}function _toTrainCase(str){return _fragment(toLowerCase(String(str))).map(function(frag){return toUpperCase(frag[0])+_tail(frag)}).join('-')}function _tail(str){return String.prototype.slice.call(str,1)}function _fragment(str){return String.prototype.match.call(str,_pattern.FRAGMENT)}